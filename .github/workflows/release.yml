name: Build and Release

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            artifact_name: bbctl
            asset_name: bbctl-linux
          - os: windows-latest
            artifact_name: bbctl.exe
            asset_name: bbctl-windows.exe
          - os: macos-latest
            artifact_name: bbctl
            asset_name: bbctl-macos
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install .
    
    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --name bbctl --hidden-import=click --hidden-import=requests --hidden-import=python-dotenv bbctl/main.py
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: dist/${{ matrix.artifact_name }}
    
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/${{ matrix.artifact_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-linux:
    name: Build Linux Binary
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install .
    
    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --name bbctl --hidden-import=click --hidden-import=requests --hidden-import=python-dotenv bbctl/main.py
    
    - name: Generate SHA-256 checksum
      run: |
        cd dist
        sha256sum bbctl > bbctl-linux-checksum.txt
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: bbctl-linux
        path: |
          dist/bbctl
          dist/bbctl-linux-checksum.txt
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.run_number }}
        name: Build ${{ github.run_number }}
        files: |
          dist/bbctl
          dist/bbctl-linux-checksum.txt
        body: |
          # Build ${{ github.run_number }}
          
          Automated build from commit: ${{ github.sha }}
          
          ## Installation
          
          ```bash
          # Download the binary
          curl -LO https://github.com/${{ github.repository }}/releases/download/${{ github.run_number }}/bbctl
          
          # Make it executable
          chmod +x bbctl
          
          # Move to a directory in your PATH
          sudo mv bbctl /usr/local/bin/
          ```
          
          Check the included checksum file to verify the download.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}